<mah:MetroWindow
    x:Class="Rack.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    Style="{StaticResource {x:Type mah:MetroWindow}}"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:views="clr-namespace:Rack.Views"
    xmlns:messaging="clr-namespace:Rack.Shared.MainWindow;assembly=Rack.Shared"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:converters="clr-namespace:Rack.Wpf.Converters;assembly=Rack.Wpf"
    WindowState="Maximized"
    IsTabStop="False"
    Icon="../icon-256px.ico"
    ShowIconOnTitleBar="False"
    x:Name="Root">
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button x:Name="ShowChangelogsButton" IsTabStop="False">
                <materialDesign:PackIcon Kind="Journal" />
            </Button>
            <Button x:Name="AuthenticateButton" IsTabStop="False">
                <materialDesign:PackIcon Kind="Account" />
            </Button>
            <Button x:Name="ShowMessagesButton" IsTabStop="False">
                <materialDesign:PackIcon Kind="MessageText" />
            </Button>
            <Button x:Name="ShowAppSettingsButton" IsTabStop="False">
                <materialDesign:PackIcon Kind="Settings" />
            </Button>
            <Button x:Name="ShowAppHelpButton" IsTabStop="False">
                <materialDesign:PackIcon Kind="Information" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Window.Resources>
        <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Header">
                <Setter.Value>
                    <TextBlock Text="{Binding DataContext.Title}" />
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="JournalMessage" DataType="{x:Type messaging:Message}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Text="{Binding CreationDateTime, StringFormat={}{0:yyyy.MM.dd HH:mm:ss}, Converter={converters:UtcToLocalDateTimeConverter}}"
                    Margin="0,0,10,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageType}" Value="Error">
                                    <Setter Property="Foreground" Value="{StaticResource ValidationErrorBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageType}" Value="Warning">
                                    <Setter Property="Foreground" Value="DarkOrange" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Text="{Binding Text}" Grid.Column="1" TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <materialDesign:DialogHost x:Name="DialogHost" CloseOnClickAway="True" IsTabStop="False">
        <materialDesign:DialogHost.DialogContent>
            <Grid MinHeight="80" MinWidth="100">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="CopyBigMessageMenuItem">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ContentCopy" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>
                <ScrollViewer Grid.ColumnSpan="2">
                    <TextBlock
                        x:Name="BigMessageTextBlock"
                        ScrollViewer.CanContentScroll="True"
                        TextWrapping="WrapWithOverflow"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center" />
                </ScrollViewer>

                <Button
                    Grid.Row="1"
                    Content="ОК"
                    x:Name="BigMessageCloseButton">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding ViewModel.CurrentBigMessage.MessageType, ElementName=Root}"
                                    Value="Error">
                                    <DataTrigger.Setters>
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource SecondaryAccentForegroundBrush}" />
                                        <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </materialDesign:DialogHost.DialogContent>
        <DockPanel KeyboardNavigation.TabNavigation="Local">
            <views:MainMenu
                x:Name="MainMenu"
                DockPanel.Dock="Top"
                TabIndex="0" />

            <materialDesign:Snackbar
                x:Name="SmallMessagesSnackbar"
                DockPanel.Dock="Bottom"
                HorizontalAlignment="Stretch"
                IsTabStop="False">
                <materialDesign:Snackbar.Resources>
                    <DataTemplate DataType="{x:Type messaging:Message}">
                        <DockPanel>
                            <materialDesign:PackIcon
                                DockPanel.Dock="Left"
                                Name="MessageIcon" Margin="0,0,6,0" HorizontalAlignment="Center"
                                VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center">
                                <materialDesign:PackIcon.Style>
                                    <Style
                                        TargetType="materialDesign:PackIcon"
                                        BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                        <Setter Property="Kind" Value="Information" />
                                        <Setter Property="ToolTip"
                                                Value="{Binding DataContext.Localization[Message], ElementName=Root}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MessageType}"
                                                         Value="{x:Static messaging:MessageType.Warning}">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Kind" Value="Alert" />
                                                    <Setter Property="ToolTip"
                                                            Value="{Binding DataContext.Localization[Warning], ElementName=Root}" />
                                                    <Setter Property="Foreground" Value="DarkOrange" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MessageType}"
                                                         Value="{x:Static messaging:MessageType.Error}">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Kind" Value="AlertDecagram" />
                                                    <Setter Property="ToolTip"
                                                            Value="{Binding DataContext.Localization[Error], ElementName=Root}" />
                                                    <Setter Property="Foreground"
                                                            Value="{StaticResource ValidationErrorBrush}" />
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </materialDesign:PackIcon.Style>
                            </materialDesign:PackIcon>
                            <TextBlock Text="{Binding Text}" FontWeight="Normal"
                                       VerticalAlignment="Center"
                                       TextWrapping="WrapWithOverflow" />
                        </DockPanel>
                    </DataTemplate>
                </materialDesign:Snackbar.Resources>
            </materialDesign:Snackbar>
            <Grid x:Name="UpdateGrid" DockPanel.Dock="Bottom">
                <ProgressBar x:Name="UpdateProgressBar"
                             Height="Auto"
                             VerticalAlignment="Stretch" />
                <TextBlock x:Name="UpdateTextBlock"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="{StaticResource PrimaryHueMidForegroundBrush}" />
            </Grid>
            <materialDesign:DrawerHost x:Name="DrawerHost">
                <materialDesign:DrawerHost.RightDrawerContent>
                    <DockPanel>
                        <Button x:Name="CloseMessagesJournalButton"
                                HorizontalAlignment="Right"
                                Style="{StaticResource MaterialDesignIconButton}"
                                Foreground="{DynamicResource ValidationErrorBrush}"
                                DockPanel.Dock="Top">
                            <materialDesign:PackIcon Kind="Close" />
                        </Button>
                        <ScrollViewer>
                            <ListBox
                                x:Name="JournalListBox"
                                ItemTemplate="{StaticResource JournalMessage}"
                                AlternationCount="1" TabIndex="1"
                                SelectionMode="Extended">
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem x:Name="CopyMessagesToClipboardMenuItem">
                                            <MenuItem.Icon>
                                                <materialDesign:PackIcon Kind="ContentCopy" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </ScrollViewer>
                    </DockPanel>
                </materialDesign:DrawerHost.RightDrawerContent>
                <reactiveUi:RoutedViewHost
                    x:Name="RoutedViewHost"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch" />
            </materialDesign:DrawerHost>
        </DockPanel>
    </materialDesign:DialogHost>
</mah:MetroWindow>